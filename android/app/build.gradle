plugins {
    id "com.android.application"
    id "kotlin-android"
    // Flutter Gradle Plugin must be applied after the Android and Kotlin Gradle plugins
    id "dev.flutter.flutter-gradle-plugin"
}

// ‚úÖ Load keystoreProperties here (required for signingConfigs to work)
def keystoreProperties = new Properties()
def keystorePropertiesFile = new File("C:/Users/PC/Projects/wotg_community_app/key.properties")
println "üìç Absolute path: ${keystorePropertiesFile.absolutePath}"
if (keystorePropertiesFile.exists()) {
    keystoreProperties.load(new FileInputStream(keystorePropertiesFile))
    println "‚úÖ key.properties found!"
    println "üîê Keystore loaded: ${keystoreProperties}"
} else {
    println "üö´ key.properties NOT FOUND"
}

android {
    namespace = "com.wotgonline.wotg_community"
    compileSdk = flutter.compileSdkVersion
    ndkVersion = flutter.ndkVersion

    defaultConfig {
        applicationId = "com.wotgonline.wotg_community"
        minSdk = flutter.minSdkVersion
        targetSdk = flutter.targetSdkVersion
        versionCode = flutter.versionCode
        versionName = flutter.versionName
    }

    compileOptions {
        sourceCompatibility = JavaVersion.VERSION_1_8
        targetCompatibility = JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = JavaVersion.VERSION_1_8
    }

    signingConfigs {
        release {
            keyAlias keystoreProperties['keyAlias']
            keyPassword keystoreProperties['keyPassword']
            storeFile keystoreProperties['storeFile'] ? file(keystoreProperties['storeFile']) : 'wotg-release.jks'
            storePassword keystoreProperties['storePassword']
        }
    }

    buildTypes {
        release {
            signingConfig signingConfigs.release
            minifyEnabled false
            shrinkResources false
        }
    }
}

dependencies {
    implementation platform('com.google.firebase:firebase-bom:32.2.0')
    implementation 'com.google.firebase:firebase-messaging'
    implementation 'androidx.media:media:1.6.0'
}

flutter {
    source = "../.."
}

apply plugin: 'com.google.gms.google-services'
